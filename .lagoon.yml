docker-compose-yaml: docker-compose.yml

tasks:
  post-rollout:
    #
    # Helper command to discover available variables. Remove in production.
    - run:
        name: env variables
        command: env
        service: cli

    - run:
        name: Download database
        command: |
          # If source DB is in Acquia, we need to be able to use Cloud API
          # to download the database dump. In order to do so, we need to
          # provide Cloud API credentials in AC_API_USER_NAME and AC_API_USER_PASS
          # variables, which can be either set in your .env file and stored in
          # the git repository (not the best practice) or through GraphQL query
          # in Lagoon (need to contact Amazee support).
          # Import variables from .env file.
          export $(grep -v '^#' .env | xargs)
          #
          # Override resulting file (since we are running in container) and
          # download backup.
          DB_FILE=/tmp/data/db.sql ./scripts/drevops/download-db.sh
        service: cli

    - run:
        name: Install site
        command: ./scripts/drevops/install-site.sh
        service: cli

environments:
  master:
    types:
      mariadb: mariadb-shared
    cronjobs:
      - name: drush cron
        schedule: '*/15 * * * *'
        command: drush cron
        service: cli
    routes:
      - nginx:
          - star-wars.com:
              tls-acme: 'true'
          - www.star-wars.com:
              tls-acme: 'false'
    monitoring_urls:
      - star-wars.com
      - www.star-wars.com
routes:
  insecure: Redirect
